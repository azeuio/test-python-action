# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: CI python

on:
  push:
    branches: [ "main" ]
    # paths:
    #   - '**.py'
  pull_request:
    branches: [ "main" ]
    # paths:
    #   - '**.py'

env:
  PYTHON_SOURCE_DIR: ${{ vars.PYTHON_SOURCE_DIR || 'src' }}
  PYTHON_TEST_DIR: ${{ vars.PYTHON_TEST_DIR || 'tests' }}

jobs:

  build:
    runs-on: ubuntu-latest
    # needs: setup
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4

    # recompute config files only if github variables changed
    - name: Cache config files
      uses: actions/cache@v4
      with:
        path: |
          .coveragerc
          pytest.ini
        key: ${{ env.PYTHON_SOURCE_DIR }}-${{ env.PYTHON_TEST_DIR }}-${{ hashFiles('.coveragerc', 'pytest.ini') }}
        restore-keys: |
          ${{ env.PYTHON_SOURCE_DIR }}-${{ env.PYTHON_TEST_DIR }}-

    - if: steps.cache-config-files.outputs.cache-hit != 'true'
      id: update-config
      run: |
        echo "Config files not found in cache, updating them"
      name: Set test and source dir in config files
      run: |
        sed -i "s|*/tests/*|*/${{ env.PYTHON_TEST_DIR }}/*|g" .coveragerc
        cat .coveragerc
        sed -i "s|^testpaths = .*|testpaths = ${{ env.PYTHON_TEST_DIR }}|g" pytest.ini
        sed -i "s|^pythonpath = .*|pythonpath = ${{ env.PYTHON_SOURCE_DIR }}|g" pytest.ini
        cat pytest.ini

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
