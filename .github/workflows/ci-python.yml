# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: CI python

on:
  push:
    branches: [ "main" ]
    paths:
      - '**.py'
  pull_request:
    branches: [ "main" ]
    paths:
      - '**.py'

env:
  PYTHON_SOURCE_DIR: ${{ vars.PYTHON_SOURCE_DIR || 'src' }}
  PYTHON_TEST_DIR: ${{ vars.PYTHON_TEST_DIR || 'tests' }}

jobs:

  build:
    runs-on: ubuntu-latest
    # needs: setup
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Set test and source dir in config files
      run: |
        echo "Config files not found in cache, updating them"
        sed -i "s|/.*# <test-folder>|/${{ env.PYTHON_TEST_DIR }}/*|g" .coveragerc
        cat .coveragerc
        sed -i "s|.*; <test-folder>|testpaths = ${{ env.PYTHON_TEST_DIR }}|g" pytest.ini
        sed -i "s|.*; <source-folder>|pythonpath = ${{ env.PYTHON_SOURCE_DIR }}|g" pytest.ini
        sed -i "s|\-\-cov\=.*|--cov=${{ env.PYTHON_SOURCE_DIR }}|g" pytest.ini
        cat pytest.ini

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-


    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        if git log -1 --pretty=%B | grep -iq "no lint"; then
          echo "Non-critical lint errors will be treated as warnings due to 'no lint' in commit message"
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        else
          flake8 . --count --max-complexity=10 --max-line-length=127 --statistics
        fi
    - name: Test with pytest
      run: |
        pytest
